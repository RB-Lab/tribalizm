// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType } from 'typesafe-i18n'
import type { LocalizedString } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType
export type BaseLocale = 'en'

export type Locales =
	| 'en'
	| 'ru'

export type Translation = {
	'start': {	
		/**
		 * Join tribes of likelly-minded people nearby!
		 */
		'text': string
		'buttons': {	
			/**
			 * ‚ÑπÔ∏è  Game rules
			 */
			'rules': string
			/**
			 * üìú List tribes
			 */
			'list': string
		}
	}
	'rules': {	
		'buttons': {	
			/**
			 * ‚Üê Back
			 */
			'back': string
			/**
			 * üöÄ Let's start!
			 */
			'start': string
			/**
			 * What is brainstorm?
			 */
			'onBrainsotrm': string
			/**
			 * Who are quests?
			 */
			'onQuests': string
			/**
			 * Who is shaman?
			 */
			'onShaman': string
			/**
			 * Who is chief?
			 */
			'onChief': string
			/**
			 * What's next?
			 */
			'next': string
		}
		/**
		 * To join a tribe you like you must send application. Tribe's chief and shaman will consider it and invite you to have a conversation with them. If they decide that you allign with the tribe spirit well, they will let you join
		 */
		'apply': string
		/**
		 * Chief is the most charismatic person in the tribe. Their duties is to maintain tribe's integrity.
		 */
		'onChief': string
		/**
		 * Shaman is the most wise person in the tribe. Thier duities is to assist tribe's chief.
		 */
		'onShaman': string
		/**
		 * Now, when you're in tribe you can participate in brainstorm and tribe's quests
		 */
		'inTribe': string
		/**
		 * In a brainstorm you will suggest activities for the tribe and vote for activities you likeYou will be notified when next brainstorm is on the horizon!
		 */
		'onBrainstorm': string
		/**
		 * Quests are tribe's activities. Those could be practical tasks, or just gatherings to hang out with your fellows
		 */
		'onQuests': string
	}
	'tribesList': {	
		/**
		 * What is the city you're in?
		 */
		'requestLocationText': string
		/**
		 * üåç Share my location
		 */
		'requestLocation': string
		/**
		 * üöÄ Send application
		 */
		'apply': string
		/**
		 * Members count:
		 */
		'count': string
		/**
		 * Searchin in {city}: 
		 * @param {unknown} city
		 */
		'searchIn': RequiredParams1<'city'>
		/**
		 * Please, write tribe's chief and shaman about yourself and why do you want to join "{tribe}" tribe?
		 * @param {unknown} tribe
		 */
		'applyText': RequiredParams1<'tribe'>
		/**
		 * üì® Your application has been sent. Tribe chief will propose a meeting soon.
		 */
		'applicationSent': string
		/**
		 * üì® Application has been sent
		 */
		'applicationSentShort': string
	}
	'initiation': {	
		/**
		 * Please describe in a few words why did you decline an appliaction.
		 */
		'declinePrompt': string
		/**
		 * Ok, appliaction has been declined
		 */
		'declineOk': string
		/**
		 * {name}, {elder} of the {tribe} proposes to meet: 
	 {proposal}
		 * @param {unknown} elder
		 * @param {unknown} name
		 * @param {unknown} proposal
		 * @param {unknown} tribe
		 */
		'questNotification': RequiredParams4<'elder', 'name', 'proposal', 'tribe'>
		'elders': {	
			/**
			 * chief
			 */
			'chief': string
			/**
			 * shaman
			 */
			'shaman': string
		}
		/**
		 * candidate
		 */
		'candidate': string
	}
	'introduction': {	
		/**
		 * {name}, member of the {tribe} proposes to meet: 
	 {proposal}
		 * @param {unknown} name
		 * @param {unknown} proposal
		 * @param {unknown} tribe
		 */
		'questNotification': RequiredParams3<'name', 'proposal', 'tribe'>
	}
	'calendar': {	
		/**
		 * Su,Mo,Tu,We,Th,Fr,St
		 */
		'weekdays': string
		/**
		 * January,February,March,April,May,June,July,August,September,October,November,December
		 */
		'months': string
		'startWeekDay': string
	}
	'questNegotiation': {	
		/**
		 * üìÖ Select a date, when you'd like to meet
		 */
		'proposeDate': string
		/**
		 * üïò Choose an hour of the day
		 */
		'proposeTimeHours': string
		/**
		 * üï§ Choose minutes
		 */
		'proposeTimeMinutes': string
		/**
		 * üåç Now where you want to meet?
		 */
		'proposePlace': string
		/**
		 *  ‚Ä¢ Time: {date|date}
	 ‚Ä¢ Place: {place}
		 * @param {Date} date
		 * @param {unknown} place
		 */
		'proposal': RequiredParams2<'date|date', 'place'>
		/**
		 * You propose to meet: 
	 {proposal}
		 * @param {unknown} proposal
		 */
		'proposalConfirmPrompt': RequiredParams1<'proposal'>
		/**
		 * {who} of {tribe} tribe proposes to meet for "{description}": 
	 {proposal}
		 * @param {unknown} description
		 * @param {unknown} proposal
		 * @param {unknown} tribe
		 * @param {unknown} who
		 */
		'proposalRecieved': RequiredParams4<'description', 'proposal', 'tribe', 'who'>
		/**
		 * ‚úÖ Okay
		 */
		'confirm': string
		/**
		 * ü§î Edit
		 */
		'edit': string
		/**
		 * ü§î Suggest otherwise
		 */
		'proposeOther': string
		/**
		 * üì® Ok, proposal has been sent.
		 */
		'proposalDone': string
	}
	'notifications': {	
		'tribeAppliaction': {	
			/**
			 * A new member appliaction for tribe {tribe}!
			 * @param {unknown} tribe
			 */
			'title': RequiredParams1<'tribe'>
			/**
			 * From user {username}.
			 * @param {unknown} username
			 */
			'applicant': RequiredParams1<'username'>
			/**
			 * Cover leter:
			 */
			'coverLetter': string
			/**
			 * üëç Propose a meeting
			 */
			'assignInitiation': string
			/**
			 * ‚õîÔ∏è Decline
			 */
			'decline': string
			/**
			 * Your appliaction to the tribe "{tribe}" has been declined
			 * @param {unknown} tribe
			 */
			'applicationDeclined': RequiredParams1<'tribe'>
		}
	}
}

export type TranslationFunctions = {
	'start': {	
		/**
		 * Join tribes of likelly-minded people nearby!
		 */
		'text': () => LocalizedString
		'buttons': {	
			/**
			 * ‚ÑπÔ∏è  Game rules
			 */
			'rules': () => LocalizedString
			/**
			 * üìú List tribes
			 */
			'list': () => LocalizedString
		}
	}
	'rules': {	
		'buttons': {	
			/**
			 * ‚Üê Back
			 */
			'back': () => LocalizedString
			/**
			 * üöÄ Let's start!
			 */
			'start': () => LocalizedString
			/**
			 * What is brainstorm?
			 */
			'onBrainsotrm': () => LocalizedString
			/**
			 * Who are quests?
			 */
			'onQuests': () => LocalizedString
			/**
			 * Who is shaman?
			 */
			'onShaman': () => LocalizedString
			/**
			 * Who is chief?
			 */
			'onChief': () => LocalizedString
			/**
			 * What's next?
			 */
			'next': () => LocalizedString
		}
		/**
		 * To join a tribe you like you must send application. Tribe's chief and shaman will consider it and invite you to have a conversation with them. If they decide that you allign with the tribe spirit well, they will let you join
		 */
		'apply': () => LocalizedString
		/**
		 * Chief is the most charismatic person in the tribe. Their duties is to maintain tribe's integrity.
		 */
		'onChief': () => LocalizedString
		/**
		 * Shaman is the most wise person in the tribe. Thier duities is to assist tribe's chief.
		 */
		'onShaman': () => LocalizedString
		/**
		 * Now, when you're in tribe you can participate in brainstorm and tribe's quests
		 */
		'inTribe': () => LocalizedString
		/**
		 * In a brainstorm you will suggest activities for the tribe and vote for activities you likeYou will be notified when next brainstorm is on the horizon!
		 */
		'onBrainstorm': () => LocalizedString
		/**
		 * Quests are tribe's activities. Those could be practical tasks, or just gatherings to hang out with your fellows
		 */
		'onQuests': () => LocalizedString
	}
	'tribesList': {	
		/**
		 * What is the city you're in?
		 */
		'requestLocationText': () => LocalizedString
		/**
		 * üåç Share my location
		 */
		'requestLocation': () => LocalizedString
		/**
		 * üöÄ Send application
		 */
		'apply': () => LocalizedString
		/**
		 * Members count:
		 */
		'count': () => LocalizedString
		/**
		 * Searchin in {city}: 
		 */
		'searchIn': (arg: { city: unknown }) => LocalizedString
		/**
		 * Please, write tribe's chief and shaman about yourself and why do you want to join "{tribe}" tribe?
		 */
		'applyText': (arg: { tribe: unknown }) => LocalizedString
		/**
		 * üì® Your application has been sent. Tribe chief will propose a meeting soon.
		 */
		'applicationSent': () => LocalizedString
		/**
		 * üì® Application has been sent
		 */
		'applicationSentShort': () => LocalizedString
	}
	'initiation': {	
		/**
		 * Please describe in a few words why did you decline an appliaction.
		 */
		'declinePrompt': () => LocalizedString
		/**
		 * Ok, appliaction has been declined
		 */
		'declineOk': () => LocalizedString
		/**
		 * {name}, {elder} of the {tribe} proposes to meet: 
	 {proposal}
		 */
		'questNotification': (arg: { elder: unknown, name: unknown, proposal: unknown, tribe: unknown }) => LocalizedString
		'elders': {	
			/**
			 * chief
			 */
			'chief': () => LocalizedString
			/**
			 * shaman
			 */
			'shaman': () => LocalizedString
		}
		/**
		 * candidate
		 */
		'candidate': () => LocalizedString
	}
	'introduction': {	
		/**
		 * {name}, member of the {tribe} proposes to meet: 
	 {proposal}
		 */
		'questNotification': (arg: { name: unknown, proposal: unknown, tribe: unknown }) => LocalizedString
	}
	'calendar': {	
		/**
		 * Su,Mo,Tu,We,Th,Fr,St
		 */
		'weekdays': () => LocalizedString
		/**
		 * January,February,March,April,May,June,July,August,September,October,November,December
		 */
		'months': () => LocalizedString
		'startWeekDay': () => LocalizedString
	}
	'questNegotiation': {	
		/**
		 * üìÖ Select a date, when you'd like to meet
		 */
		'proposeDate': () => LocalizedString
		/**
		 * üïò Choose an hour of the day
		 */
		'proposeTimeHours': () => LocalizedString
		/**
		 * üï§ Choose minutes
		 */
		'proposeTimeMinutes': () => LocalizedString
		/**
		 * üåç Now where you want to meet?
		 */
		'proposePlace': () => LocalizedString
		/**
		 *  ‚Ä¢ Time: {date|date}
	 ‚Ä¢ Place: {place}
		 */
		'proposal': (arg: { date: Date, place: unknown }) => LocalizedString
		/**
		 * You propose to meet: 
	 {proposal}
		 */
		'proposalConfirmPrompt': (arg: { proposal: unknown }) => LocalizedString
		/**
		 * {who} of {tribe} tribe proposes to meet for "{description}": 
	 {proposal}
		 */
		'proposalRecieved': (arg: { description: unknown, proposal: unknown, tribe: unknown, who: unknown }) => LocalizedString
		/**
		 * ‚úÖ Okay
		 */
		'confirm': () => LocalizedString
		/**
		 * ü§î Edit
		 */
		'edit': () => LocalizedString
		/**
		 * ü§î Suggest otherwise
		 */
		'proposeOther': () => LocalizedString
		/**
		 * üì® Ok, proposal has been sent.
		 */
		'proposalDone': () => LocalizedString
	}
	'notifications': {	
		'tribeAppliaction': {	
			/**
			 * A new member appliaction for tribe {tribe}!
			 */
			'title': (arg: { tribe: unknown }) => LocalizedString
			/**
			 * From user {username}.
			 */
			'applicant': (arg: { username: unknown }) => LocalizedString
			/**
			 * Cover leter:
			 */
			'coverLetter': () => LocalizedString
			/**
			 * üëç Propose a meeting
			 */
			'assignInitiation': () => LocalizedString
			/**
			 * ‚õîÔ∏è Decline
			 */
			'decline': () => LocalizedString
			/**
			 * Your appliaction to the tribe "{tribe}" has been declined
			 */
			'applicationDeclined': (arg: { tribe: unknown }) => LocalizedString
		}
	}
}

export type Formatters = {
	'date': (value: Date) => unknown
}

type Param<P extends string> = `{${P}}`

type Params1<P1 extends string> =
	`${string}${Param<P1>}${string}`

type Params2<P1 extends string, P2 extends string> =
	`${string}${Param<P1>}${string}${Param<P2>}${string}`

type Params3<P1 extends string, P2 extends string, P3 extends string> =
	`${string}${Param<P1>}${string}${Param<P2>}${string}${Param<P3>}${string}`

type Params4<P1 extends string, P2 extends string, P3 extends string, P4 extends string> =
	`${string}${Param<P1>}${string}${Param<P2>}${string}${Param<P3>}${string}${Param<P4>}${string}`

type RequiredParams1<P1 extends string> =
	| Params1<P1>

type RequiredParams2<P1 extends string, P2 extends string> =
	| Params2<P1, P2>
	| Params2<P2, P1>

type RequiredParams3<P1 extends string, P2 extends string, P3 extends string> =
	| Params3<P1, P2, P3>
	| Params3<P1, P3, P2>
	| Params3<P2, P1, P3>
	| Params3<P2, P3, P1>
	| Params3<P3, P1, P2>
	| Params3<P3, P2, P1>

type RequiredParams4<P1 extends string, P2 extends string, P3 extends string, P4 extends string> =
	| Params4<P1, P2, P3, P4>
	| Params4<P1, P2, P4, P3>
	| Params4<P1, P3, P2, P4>
	| Params4<P1, P3, P4, P2>
	| Params4<P1, P4, P2, P3>
	| Params4<P1, P4, P3, P2>
	| Params4<P2, P1, P3, P4>
	| Params4<P2, P1, P4, P3>
	| Params4<P2, P3, P1, P4>
	| Params4<P2, P3, P4, P1>
	| Params4<P2, P4, P1, P3>
	| Params4<P2, P4, P3, P1>
	| Params4<P3, P1, P2, P4>
	| Params4<P3, P1, P4, P2>
	| Params4<P3, P2, P1, P4>
	| Params4<P3, P2, P4, P1>
	| Params4<P3, P4, P1, P2>
	| Params4<P3, P4, P2, P1>
	| Params4<P4, P1, P2, P3>
	| Params4<P4, P1, P3, P2>
	| Params4<P4, P2, P1, P3>
	| Params4<P4, P2, P3, P1>
	| Params4<P4, P3, P1, P2>
	| Params4<P4, P3, P2, P1>
